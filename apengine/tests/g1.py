from airpower.tests.infrastructure import *
startfile(__file__, "displament rolls")

# Displacement Rolls

# Check the position after a displacement roll.

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "E", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "E", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("2008       E    10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2609       E    10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "ENE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "ENE", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1906       ENE  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2608       ENE  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "NNE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "NNE", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1806       NNE  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2506       NNE  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "N", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "N", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1606       N    10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2406       N    10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "NNW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "NNW", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1506       NNW  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2206       NNW  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "WNW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "WNW", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1408       WNW  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2106       WNW  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "W", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "W", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1409       W    10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2008       W    10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "WSW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "WSW", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1510       WSW  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2009       WSW  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "SSW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "SSW", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1611       SSW  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2110       SSW  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "S", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "S", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1811       S    10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2211       S    10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "SSE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "SSE", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("1910       SSE  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2411       SSE  10",  3.0)
endturn()

startsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", 1708, "ESE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", 2308, "ESE", 10, 3.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "M", "H,DRL/H,HL")
A1._assert("2009       ESE  10",  3.0)
A2.move("LVL",  "M", "H,DRR/H,HR")
A2._assert("2510       ESE  10",  3.0)
endturn()

# Check we can carry preparatory HFPs from one turn to the next.

startsetup(verbose=False)
A1 = aircraft("A1", "F-104A", 1715, "N", 10, 7.0, "CL")
endsetup()
startturn()
A1.move("LVL",  0.5, "H,H,H,H,H,H,DRL/H")
A1._assert("1708       N    10",  7.0)
endturn()

startturn()
A1.move("LVL",  0.5 , "HL,H,H,H,H,H,H"  )
A1._assert("1602       N    10",  7.0)
endturn()

# Check VFPs and unloaded HFPs are not counted as preparatory HFPs.

startsetup(verbose=False)
A1 = aircraft("A1", "F-104A", 1715, "N", 10, 7.0, "CL")
endsetup()
startturn()
A1.move("UD" ,  "AB", "H,DRL/HD,HL,H,H,H,H"   )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("UD" ,  "AB", "H,DRL/HD,HDL,H,H,H,H"  )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("UD" ,  "AB", "H,DRL/H,HL,HD,HD,HD,HD")
A1._assert("1609       N     6",  8.0)
A1.move("SD" ,  "AB", "H,DRL/D,D,HL,H,H,H,H"  )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("SD" ,  "AB", "H,DRL/H,DL,H,H,H,H"    )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("SD" ,  "AB", "H,DRL/H,HL,D,D,D,D"    )
A1._assert("1613       N     6",  8.0)
A1.move("ZC" ,  "AB", "H,DRL/C,HL,H,H,H,H"    )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("ZC" ,  "AB", "H,DRL/H,CL,H,H,H,H"    )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("ZC" ,  "AB", "H,DRL/H,HL,C,C,C,C"    )
A1._assert("1613       N    14",  6.5)
endturn()

startturn()
A1.move("ZC" ,  "AB", "H,DRL/C,HL,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("LVL",  "M" , "H,H,H,H,H,H"     )
A1._assert("1607       N    14",  7.0)
endturn()

# Check the required preparatory HFPs, both at subsonic and supersonic speeds.

startsetup(verbose=False)
A1 = aircraft("A1", "F-104A", 1715, "N",  7, 7.0, "CL")
A2 = aircraft("A2", "F-104A", 1915, "N",  7, 7.5, "CL")
A3 = aircraft("A3", "F-104A", 2115, "N", 20, 6.5, "CL")
A4 = aircraft("A4", "F-104A", 2315, "N", 20, 7.0, "CL")
endsetup()
startturn()
A1.move("LVL",  "AB", "H,DRL/HL,H,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("LVL",  "AB", "H,DRL/H,HL,H,H,H,H")
A1._assert("1609       N     7",  7.5)
A2.move("LVL",  "AB", "H,DRL/H,HL,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A2.move("LVL",  "AB", "H,DRL/H,H,HL,H,H,H")
A2._assert("1809       N     7",  7.5)
A3.move("LVL",  "AB", "H,DRL/HL,H,H,H,H"  )
asserterror("attempt to roll without sufficient preparatory HFPs.")
A3.move("LVL",  "AB", "H,DRL/H,HL,H,H,H"  )
A3._assert("2010       N    20",  7.0)
A4.move("LVL",  "AB", "H,DRL/H,HL,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A4.move("LVL",  "AB", "H,DRL/H,H,HL,H,H,H")
A4._assert("2209       N    20",  7.0)
endturn()

# Check additional preparatory HFPs required at altitude.

startsetup(verbose=False)
A1 = aircraft("A1", "F-104A", 1515, "N", 20, 12.0, "CL")
A2 = aircraft("A2", "F-104A", 1715, "N", 30, 12.0, "CL")
A3 = aircraft("A3", "F-104A", 1915, "N", 40, 12.0, "CL")
A4 = aircraft("A4", "F-104A", 2115, "N", 50, 12.0, "CL")
A5 = aircraft("A5", "F-104A", 2315, "N", 61, 12.0, "CL")

endsetup()
startturn()
A1.move("LVL",  "AB", "H,DRL/H,HL,H,H,H,H,H,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A1.move("LVL",  "AB", "H,DRL/H,H,HL,H,H,H,H,H,H,H,H")
A1._assert("1404       N    20",  12.0)
A2.move("LVL",  "AB", "H,DRL/H,H,HL,H,H,H,H,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A2.move("LVL",  "AB", "H,DRL/H,H,H,HL,H,H,H,H,H,H,H")
A2._assert("1604       N    30",  12.0)
A3.move("LVL",  "AB", "H,DRL/H,H,H,HL,H,H,H,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A3.move("LVL",  "AB", "H,DRL/H,H,H,H,HL,H,H,H,H,H,H")
A3._assert("1804       N    40",  12.0)
A4.move("LVL",  "AB", "H,DRL/H,H,H,H,HL,H,H,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A4.move("LVL",  "AB", "H,DRL/H,H,H,H,H,HL,H,H,H,H,H")
A4._assert("2004       N    50",  12.0)
A5.move("LVL",  "AB", "H,DRL/H,H,H,H,H,HL,H,H,H,H,H")
asserterror("attempt to roll without sufficient preparatory HFPs.")
A5.move("LVL",  "AB", "H,DRL/H,H,H,H,H,H,HL,H,H,H,H")
A5._assert("2204       N    61",  12.0)
endturn()

# Check allowed flight types.

startsetup()
A1 = aircraft("A1", "F-80C", "1415", "N", 20, 4.0, "CL")
A2 = aircraft("A1", "F-80C", "1615", "N", 20, 4.0, "CL")
endsetup()

startturn()
A1.move("SC", "M", "DRL/H,H,H,H")
asserterror("attempt to declare a displacement roll while flight type is SC.")
A2.move("SC", "M", "DRR/H,H,H,H")
asserterror("attempt to declare a displacement roll while flight type is SC.")
A1.move("SC", "M", "H,H,H,H")
A2.move("SC", "M", "H,H,H,H")
endturn()

startturn()
A1.move("VC", "M", "DRL/H,C2,C2,C2")
asserterror("attempt to declare a displacement roll while flight type is VC.")
A2.move("VC", "M", "DRR/H,C2,C2,C2")
asserterror("attempt to declare a displacement roll while flight type is VC.")
A1.move("SD", "M", "H,H,H,H")
A2.move("SD", "M", "H,H,H,H")
endturn()

startturn()
A1.move("VD", "M", "DRL/H,H,D2,D2,D2")
asserterror("attempt to declare a displacement roll while flight type is VD.")
A2.move("VD", "M", "DRR/H,H,D2,D2,D2")
asserterror("attempt to declare a displacement roll while flight type is VD.")
A1.move("SD", "M", "H,H,H,H")
A2.move("SD", "M", "H,H,H,H")
endturn()


# TODO: Check multiple rolls in one turn. The issue is the F-104 is GSSM.

#checkstartsetup(verbose=False)
#A1 = aircraft("A1", "F-104A", 1715, "N", 20, 12.0, "CL")

#checkendsetup()
#checkstartturn()
#A1.move("LVL",  "AB", "DRL/H,H,HL,DRR/H,H,HR,DRL/H,H,HL,DRR/H,H,HR")
#A1._assert("1705       N    20",  11.5)
#A1.move("LVL",  "AB", "DRL/H,H,HL,H,H,H,H,H,H,DRR/H,H,HR"          )
#A1._assert("1704       N    20",  12.0)
#A1.move("ZC" ,  "AB", "DRL/H,H,HL,H,C,C,C,C,H,DRR/H,H,HR"          )
#A1._assert("1708       N    24",  11.5)
#A1.move("SD" ,  "AB", "DRL/H,H,HL,H,D,D,D,D,H,DRR/H,H,HR"          )
#A1._assert("1708       N    16",  10.5)
#checkendturn()

# Check we can select the bank after a DR.

startsetup(verbose=False)
A1 = aircraft("A1", "F-80C", 1715, "N", 20, 4.0, "CL")

endsetup()
startturn()
A1.move("LVL",  "M", "DRL/H,HL/BKL,EZR/H,H")
asserterror("attempt to declare a turn to R while banked to L.")
A1.move("LVL",  "M", "DRL/H,HL/WL,EZR/H,H" )
A1._assert("1612       N    20",  4.0)
A1.move("LVL",  "M", "DRL/H,HL/BKR,EZR/H,H")
A1._assert("1612       N    20",  4.0)
A1.move("LVL",  "M", "DRR/H,HR/BKL,EZR/H,H")
asserterror("attempt to declare a turn to R while banked to L.")
A1.move("LVL",  "M", "DRR/H,HR/WL,EZR/H,H" )
A1._assert("1812       N    20",  4.0)
A1.move("LVL",  "M", "DRR/H,HR/BKR,EZR/H,H")
A1._assert("1812       N    20",  4.0)
A1.move("LVL",  "M", "DRL/H,HL/BKR,EZL/H,H")
asserterror("attempt to declare a turn to L while banked to R.")
A1.move("LVL",  "M", "DRL/H,HL/WL,EZL/H,H" )
A1._assert("1612       N    20",  4.0)
A1.move("LVL",  "M", "DRL/H,HL/BKL,EZL/H,H")
A1._assert("1612       N    20",  4.0)
A1.move("LVL",  "M", "DRR/H,HR/BKR,EZL/H,H")
asserterror("attempt to declare a turn to L while banked to R.")
A1.move("LVL",  "M", "DRR/H,HR/WL,EZL/H,H" )
A1._assert("1812       N    20",  4.0)
A1.move("LVL",  "M", "DRR/H,HR/BKL,EZL/H,H")
A1._assert("1812       N    20",  4.0)
endturn()

# Rolls and GSSM/PSSM aircraft

# F-104A is GSSM, F-102A is PSSM, and F-100A is neither.

startsetup(verbose=False)
A1 = aircraft("A1", "F-104A", 1215, "N", 20, 7.5, "CL") # GSSM
A2 = aircraft("A2", "F-100A", 1415, "N", 20, 7.5, "CL")
A3 = aircraft("A3", "F-102A", 1615, "N", 20, 7.5, "CL") # PSSM
endsetup()

startturn()

A1.move("LVL",  "AB", "H,H,H,H,H,H,H" )
A1._assert("1208       N    20",  8.0)
A2.move("LVL",  "AB", "H,H,H,H,H,H,H" )
A2._assert("1408       N    20",  7.5)
A3.move("LVL",  "AB", "H,H,H,H,H,H,H" )
A3._assert("1608       N    20",  7.5)

A1.move("LVL",  "AB", "DRR/H,H,HR,DRL/H,H,HL,H" )
A1._assert("1209       N    20",  7.5)
A2.move("LVL",  "AB", "DRR/H,H,HR,DRL/H,H,HL,H" )
A2._assert("1409       N    20",  7.0)
A3.move("LVL",  "AB", "DRR/H,H,HR,DRL/H,H,HL,H" )
A3._assert("1609       N    20",  6.5)

endturn()



endfile(__file__)