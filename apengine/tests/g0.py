from apengine.tests.infrastructure import *
startfile(__file__, "slides")

# Slides

# Check the position after a slide.

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "E", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "E", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("2008       E    10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2609       E    10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "ENE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "ENE", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1906       ENE  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2608       ENE  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "NNE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "NNE", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1806       NNE  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2506       NNE  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "N", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "N", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1606       N    10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2406       N    10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "NNW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "NNW", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1506       NNW  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2206       NNW  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "WNW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "WNW", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1408       WNW  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2106       WNW  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "W", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "W", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1409       W    10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2008       W    10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "WSW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "WSW", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1510       WSW  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2009       WSW  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "SSW", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "SSW", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1611       SSW  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2110       SSW  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "S", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "S", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1811       S    10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2211       S    10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "SSE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "SSE", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("1910       SSE  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2411       SSE  10",  3.0)
endturn()

starttestsetup(sheets=[["A1"]])
A1 = aircraft("A1", "F-80C", "1708", "ESE", 10, 3.0, "CL")
A2 = aircraft("A2", "F-80C", "2308", "ESE", 10, 3.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "M", "SLL/H,H,HL")
A1._assert("2009       ESE  10",  3.0)
A2.move("LVL",  "M", "SLR/H,H,HR")
A2._assert("2510       ESE  10",  3.0)
endturn()

# Check we can carry preparatory HFPs from one turn to the next.

starttestsetup(verbose=False)
A1 = aircraft("A1", "F-104A", "1715", "N", 10, 7.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  0.5, "H,H,H,H,H,SLL/H,H")
A1._assert("1708       N    10",  7.0)
endturn()

startturn()
A1.move("LVL",  0.5 , "HL,H,H,H,H,H,H"  )
A1._assert("1602       N    10",  7.0)
endturn()

# Check VFPs and unloaded HFPs are not counted as preparatory HFPs.

starttestsetup(verbose=False)
A1 = aircraft("A1", "F-104A", "1715", "N", 10, 7.0, "CL")
endtestsetup()
startturn()
A1.move("UD" ,  "AB", "SLL/H,HD,HL,H,H,H,H"   )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("UD" ,  "AB", "SLL/H,H,HDL,H,H,H,H"   )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("UD" ,  "AB", "SLL/H,H,HL,HD,HD,HD,HD")
A1._assert("1609       N     6",  8.0)
A1.move("SD" ,  "AB", "SLL/H,D,HL,H,H,H,H"    )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("SD" ,  "AB", "SLL/H,H,DL,H,H,H,H"    )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("SD" ,  "AB", "SLL/H,H,HL,D,D,D,D"    )
A1._assert("1613       N     6",  8.0)
A1.move("ZC" ,  "AB", "SLL/H,C,HL,H,H,H,H"    )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("ZC" ,  "AB", "SLL/H,H,CL,H,H,H,H"    )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("ZC" ,  "AB", "SLL/H,H,HL,C,C,C,C"    )
A1._assert("1613       N    14",  7.0)
endturn()

startturn()
A1.move("ZC" ,  "AB", "SLL/C,H,HL,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("LVL",  "M" , "H,H,H,H,H,H,H"     )
A1._assert("1606       N    14",  7.0)
endturn()

# Check the required preparatory HFPs, both at subsonic and supersonic speeds.

starttestsetup(verbose=False)
A1 = aircraft("A1", "F-104A", "1715", "N",  7, 7.0, "CL")
A2 = aircraft("A2", "F-104A", "1915", "N",  7, 7.5, "CL")
A3 = aircraft("A3", "F-104A", "2115", "N", 20, 6.5, "CL")
A4 = aircraft("A4", "F-104A", "2315", "N", 20, 7.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  "AB", "SLL/H,HL,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("LVL",  "AB", "SLL/H,H,HL,H,H,H,H")
A1._assert("1609       N     7",  7.5)
A2.move("LVL",  "AB", "SLL/H,H,HL,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A2.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H")
A2._assert("1809       N     7",  7.5)
A3.move("LVL",  "AB", "SLL/H,HL,H,H,H,H"  )
asserterror("attempt to slide without sufficient preparatory HFPs.")
A3.move("LVL",  "AB", "SLL/H,H,HL,H,H,H"  )
A3._assert("2010       N    20",  7.0)
A4.move("LVL",  "AB", "SLL/H,H,HL,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A4.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H")
A4._assert("2209       N    20",  7.0)
endturn()

# Check additional preparatory HFPs required at altitude.

starttestsetup(verbose=False)
A1 = aircraft("A1", "F-104A", "1515", "N", 20, 12.0, "CL")
A2 = aircraft("A2", "F-104A", "1715", "N", 30, 12.0, "CL")
A3 = aircraft("A3", "F-104A", "1915", "N", 40, 12.0, "CL")
A4 = aircraft("A4", "F-104A", "2115", "N", 50, 12.0, "CL")
A5 = aircraft("A5", "F-104A", "2315", "N", 61, 12.0, "CL")

endtestsetup()
startturn()
A1.move("LVL",  "AB", "SLL/H,H,HL,H,H,H,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A1.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H,H,H,H,H,H")
A1._assert("1404       N    20",  12.0)
A2.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A2.move("LVL",  "AB", "SLL/H,H,H,H,HL,H,H,H,H,H,H,H")
A2._assert("1604       N    30",  12.5)
A3.move("LVL",  "AB", "SLL/H,H,H,H,HL,H,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A3.move("LVL",  "AB", "SLL/H,H,H,H,H,HL,H,H,H,H,H,H")
A3._assert("1804       N    40",  12.0)
A4.move("LVL",  "AB", "SLL/H,H,H,H,H,HL,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A4.move("LVL",  "AB", "SLL/H,H,H,H,H,H,HL,H,H,H,H,H")
A4._assert("2004       N    50",  12.0)
A5.move("LVL",  "AB", "SLL/H,H,H,H,H,H,HL,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
A5.move("LVL",  "AB", "SLL/H,H,H,H,H,H,H,HL,H,H,H,H")
A5._assert("2204       N    61",  12.0)
endturn()

# Check the ability to have more than one slide at a speed of more than 9.0.

starttestsetup(verbose=False)
A1 = aircraft("A1", "F-104A", "1715", "N", 20, 12.0, "CL")

endtestsetup()
startturn()
A1.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H,SLR/H,H,H,HR,H")
asserterror("attempt to start a second slide without sufficient intermediate FPs.")
A1.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H,H,SLR/H,H,H,HR")
A1._assert("1704       N    20",  12.0)
A1.move("LVL",  "AB", "SLL/H,H,H,HL,H,H,H,H,SLR/H,H,H,HR")
A1._assert("1704       N    20",  12.0)
A1.move("ZC" ,  2.5 , "SLL/H,H,H,HL,C,C,C,C,SLR/H,H,H,HR")
A1._assert("1708       N    24",  11.5)
A1.move("SD" ,  "AB", "SLL/H,H,H,HL,D,D,D,D,SLR/H,H,H,HR")
A1._assert("1708       N    16",  10.5)
endturn()

# Check that we can't set bank on exit from a slide.

starttestsetup(verbose=False)
A1 = aircraft("A1", "F-104A", "1715", "N", 10, 7.0, "CL")
endtestsetup()
startturn()
A1.move("LVL",  0.5, "SLL/H,H,HL/BKR,H,H,H,H"   )
asserterror("attempt to bank immediately after a maneuver that is not a roll.")
A1.move("LVL",  0.5, "SLL/H,H,HL,H/BKR,H,H,H"   )
A1._assert("1609       N    10",  7.0)
endturn()

endfile(__file__)